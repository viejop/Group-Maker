import random
#string for students
students = [
    "marcos", "aidan", "shahood", "ryan", "muntag", "chris", "mason", "leo", "nathan", "gavin", "jaiden", "daybean",
    "asher", "LeBron", "sean", "antonio", "carrell", "jackson", "jacob", "chu"
]
#set restrictions
restrictions = set()

print("Available students:", students, "\n")
#ask for input
userinput = input("Enter how many students will be in each group (2, 3, or 4): ")
#logic for inputs
if userinput in ['2', '3', '4']:
        
        print("You can add up to 2 pairs of students who can't work together")
        qstinput = input("Do you want restrictions for students who can't work together? (y/n) \n")
        
        restriction_count = 0
        #restriction 1 input
        while qstinput == 'y' and restriction_count < 2:
            rst1input = input("Enter the name of the first student: ")
            CAPrstinput1 = rst1input.capitalize()
            #restriction 2 input
            rst2input = input("Enter the name of the student that can't work with " +CAPrstinput1+ ": ")
            CAPrstinput2 = rst2input.capitalize()
            #combines restrictions
            restrictions.add((CAPrstinput1, CAPrstinput2))
            print("Restriction added: " +CAPrstinput1+ " and "+CAPrstinput2+ " can't work together")
            restriction_count += 1

            if restriction_count < 2:
                qstinput = input("Do you want to add another restriction? (y/n) \n")
            else:
                print("No more restrictions can be added.")
                break
else:
        print("Please enter groups of either 2, 3, or 4")
        userinput = input("Enter how many students will be in each group (2, 3, or 4): ")

#shuffle students
random.shuffle(students)

groups = []

while len(students) >= int(userinput):
    group = students[:int(userinput)]
    students = students[int(userinput):]

    #check if any pair has a restriction
    pair_restricted = False
    for i in range(len(group)):
        for j in range(i + 1, len(group)):
            for restriction in restrictions:
                # Check if the pair matches any restriction
                if (group[i] == restriction[0] and group[j] == restriction[1]) or \
                   (group[i] == restriction[1] and group[j] == restriction[0]):
                    pair_restricted = True
                    break
            if pair_restricted:
                break
        if pair_restricted:
            break

    if not pair_restricted:
        groups.append(group)
    else:
        random.shuffle(students) 
        #reshuffle students if there's a restriction

#add remaining students to a new group if any left
if len(students) > 0:
    groups.append(students)

print("\nThe groups are:")
#added a counter for group number, and print each group with the first letter capitalized
i = 1
for group in groups:
    #use `capitalize()` to make only the first letter uppercase
    print(f"Group {i}: ", ', '.join([name.capitalize() for name in group]))  #capitalize first letter only
    i += 1
